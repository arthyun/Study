{
    "quiz" : [
        {
            "id": 1,
            "exam": "브라우저 렌더링 원리를 서술하시오"
        },
        {
            "id": 2,
            "exam": "호이스팅에 대해 설명해보시오"
        },
        {
            "id": 3,
            "exam": "클로저는 무엇인가요? 원리와 왜 사용하는지?"
        },
        {
            "id": 4,
            "exam": "this의 용법을 아는대로 설명하시오"
        },
        {
            "id": 5,
            "exam": "브라우저 저장소에 대한 차이점을 설명해주세요"
        },
        {
            "id": 6,
            "exam": "이벤트 버블링에 대해 말씀해주세요"
        },
        {
            "id": 7,
            "exam": "타입스크립트를 사용하는 이유는 무엇인가요?"
        },
        {
            "id": 8,
            "exam": "CSR과 SSR의 차이점은 무엇인가요?"
        },
        {
            "id": 9,
            "exam": "React, Vue, Angular의 차이는 무엇인가요? "
        },
        {
            "id": 10,
            "exam": "React의 상태관리 방법에 대해서 설명하시오"
        },
        {
            "id": 11,
            "exam": "React의 라이프사이클에 대해 설명해주세요"
        },
        {
            "id": 12,
            "exam": "var, let, const의 차이점"
        },
        {
            "id": 13,
            "exam": "MVC, MVVM 모델에 대해 설명하세요"
        },
        {
            "id": 14,
            "exam": "Flex 속성을 설명해주세요."
        },
        {
            "id": 15,
            "exam": "주소창에 naver.com을 입력하면 생기는 일 "
        },
        {
            "id": 16,
            "exam": "HTTP와 HTTPS의 차이점은?"
        },
        {
            "id": 17,
            "exam": "OOP의 특징에 대해서 설명하시오"
        },
        {
            "id": 18,
            "exam": "useMemo vs useCallback의 차이"
        },
        {
            "id": 19,
            "exam": "동기와 비동기에 대해 설명해주세요."
        },
        {
            "id": 20,
            "exam": "Promise란?"
        },
        {
            "id": 21,
            "exam": "Async, Await와 Promise의 차이는?"
        },
        {
            "id": 22,
            "exam": "ESLint에 대해 설명해주세요."
        },
        {
            "id": 23,
            "exam": "ES6 문법에 추가된 것들을 아는대로 설명하세요"
        },
        {
            "id": 24,
            "exam": "DOM 과 가상 DOM이란?"
        },
        {
            "id": 25,
            "exam": "웹팩과 바벨은 무엇인가?"
        },
        {
            "id": 26,
            "exam": "JWT 방식을 설명하고, 왜 사용했는지?"
        },
        {
            "id": 27,
            "exam": "async/awiat이란?"
        },
        {
            "id": 28,
            "exam": "Redux가 무엇인지 그리고 장단점 설명"
        },
        {
            "id": 29,
            "exam": "리액트 Hook에 대해 설명하시오"
        },
        {
            "id": 30,
            "exam": "CORS란? CORS를 위한 처리를 했는지, 해결 방법?"
        },
        {
            "id": 31,
            "exam": "Rest API란?"
        },
        {
            "id": 32,
            "exam": "클래스형 컴포넌트와 함수형 컴포넌트를 비교해주세요."
        },
        {
            "id": 33,
            "exam": "redux-thunk를 사용한 이유와 작동원리에 대해 설명하시오"
        },
        {
            "id": 34,
            "exam": "props와 state에 대해 설명해주세요"
        },
        {
            "id": 35,
            "exam": "call과 .apply의 차이점은 무엇인가요?"
        },
        {
            "id": 36,
            "exam": "AJAX에 대해 자세히 설명하세요(+장단점)"
        },
        {
            "id": 37,
            "exam": "use strict 이 무엇인가요? 사용시 장단점이 무엇인가요?"
        },
        {
            "id": 38,
            "exam": "Box model에 대해 설명해주세요."
        },
        {
            "id": 39,
            "exam": "Prototype이란? Prototype Chaining은?"
        },
        {
            "id": 40,
            "exam": "undeclared 란? (null, undefined와 비교)"
        },
        {
            "id": 41,
            "exam": "forEach와 Map의 차이점은?"
        },
        {
            "id": 42,
            "exam": "이벤트 루프란?"
        },
        {
            "id": 43,
            "exam": "화살표 함수와 일반함수의 차이점"
        },
        {
            "id": 44,
            "exam": "'==' 와 '==='의 차이"
        },
        {
            "id": 45,
            "exam": "깊은복사, 얕은복사란?"
        },
        {
            "id": 46,
            "exam": "고차 컴포넌트(HOC)란? 사용해본 적 있는지?"
        },
        {
            "id": 47,
            "exam": "이벤트 바인딩이란?"
        },
        {
            "id": 48,
            "exam": "라이브러리, 프레임워크의 정의를 간단하게 해본다면?"
        },
        {
            "id": 49,
            "exam": "NPM이란?"
        },
        {
            "id": 50,
            "exam": "크로스 브라우징이란?"
        },
        {
            "id": 51,
            "exam": "원시값과 참조값(array, object)의 차이점을 메모리 관점에서 설명해주세요"
        },
        {
            "id": 52,
            "exam": "리액트의 useCallback, useEffect등을 사용할 때 의존성 배열을 받게 됩니다. 이 배열의 역할은 무엇인가요?"
        },
        {
            "id": 53,
            "exam": "'attribute'와 'property'의 차이점은 무엇인가요?"
        },
        {
            "id": 54,
            "exam": "자바스크립트의 this는 몇가지로 추론될 수 있는지?"
        },
        {
            "id": 55,
            "exam": "Function.prototype.bind을 설명하세요."
        },
        {
            "id": 56,
            "exam": "콜백 함수란?"
        },
        {
            "id": 57,
            "exam": "리액트와 제이쿼리의 차이점은?"
        },
        {
            "id": 58,
            "exam": "event.target 과 event.currentTarget의 차이점은?"
        },
        {
            "id": 59,
            "exam": "Map()과 Set()의 설명 및 차이점은?"
        },
        {
            "id": 60,
            "exam": "TDD란?"
        },
        {
            "id": 61,
            "exam": "useEffect란?"
        },
        {
            "id": 62,
            "exam": "import와 require의 차이점은 무엇인가요?"
        },
        {
            "id": 63,
            "exam": "스코프란? 스코프체인이란 무엇인가요?"
        },
        {
            "id": 64,
            "exam": "HTTP요청 메소드 POST와 GET의 차이점은 무엇인가요?"
        },
        {
            "id": 65,
            "exam": "프로세스와 스레드에 대해 설명해주세요."
        }
        ,
        {
            "id": 66,
            "exam": "이벤트 버블링과 캡처링에 대해 설명해주세요."
        },
        {
            "id": 67,
            "exam": "실행 컨텍스트에 대해 설명해주세요."
        },
        {
            "id": 68,
            "exam": "불변성을 유지하려면 어떻게 해야하나요?"
        },
        {
            "id": 69,
            "exam": "CSS 애니메이션과 JS 애니메이션의 차이"
        },
        {
            "id": 70,
            "exam": "Context API와 Redux를 비교해주세요."
        },
        {
            "id": 71,
            "exam": "쿠키, 세션, 웹스토리지의 차이에 대해 설명해주세요."
        },
        {
            "id": 72,
            "exam": "웹사이트 성능 최적화에는 어떤 방법이 있나요?"
        },
        {
            "id": 73,
            "exam": "Cascading에 관해서 설명해주세요."
        },
        {
            "id": 74,
            "exam": "시맨틱 마크업에 대해 설명해주세요."
        },
        {
            "id": 75,
            "exam": "Props Drilling에 대해 설명하고 해결법을 제시하세요"
        },
        {
            "id": 76,
            "exam": "Key Props를 사용하는 이유에 대해 설명해주세요."
        },
        {
            "id": 77,
            "exam": "SEO에 대해 설명해주세요."
        },
        {
            "id": 78,
            "exam": "리플로우와 리페인트에 대해 설명해주세요."
        },
        {
            "id": 79,
            "exam": "스택과 큐의 차이점에 대해 설명해주세요."
        },
        {
            "id": 80,
            "exam": "개발자가 되고 싶은 계기가 뭔가요?"
        }
    ]
}